---
title: "Asignación #1"
date: "2023-07-24"
categories:
  - stringr
  - DT
  - csv
---

1.  Crear un Rmarkdown que le genere un HTML con lo siguiente

2.  Leer el archivo en formato CSV t mostrarlo con la librería de R- DT

3.  El listado se debe mostrar las columnas necesarias (en el hyperlink no debe mostrar sino la columna que dice Etiqueta)

4.  Coloquele un logo (jpg o png)

5.  Adjunto documento de guía

6.  Fecha de entrega: lunes 24 de julio - 2023

<details>

<summary><b>Respuesta</b></summary>

Se cargan las librerias necesarias.

```{r}
library(stringr)
library(DT)
```

Se lee el archivo csv.

```{r}
file <- read.csv(file = "./lista-empresas.csv")
```

Las funciones **`link`** y **`tag`** toman un índice como argumento y devuelven el valor correspondiente en la columna **`Link`** y **`Etiqueta`** del objeto **`file`**. El doble corchete **`[[index]]`** se utiliza para acceder a un elemento específico dentro de una lista o un data frame.

```{r}
link <- function(index) file$Link[[index]]
tag <- function(index) file$Etiqueta[[index]]
```

Esta línea de código asigna a la variable **`iterations`** el número de elementos en la columna **`Link`** del objeto **`file`**.

```{r}
iterations <- file$Link %>% length() %>% 1:.
```

La función **`lapply()`** aplica una función por cada iteración, en cada iteración a traves de la función **`str_glue()`** pasamos el link y la etiqueta, en un código HTML que permite crear enlaces **`<a href="url">name</a>`**

```{r}
link_convertion <- lapply(iterations, function(index){
  return(str_glue("<a href='{link(index)}'>{tag(index)}</a>"))
})
```

Transformamos el **`link_convertion`** en filas con **`rbind`** y posteriormente en un dataframe.

```{r}
new_links <- link_convertion %>% do.call(rbind,.) %>% data.frame(Enlace = .)
```

Creamos un dataframe nuevo a partir del csv original, con los datos que necesitamos.

```{r}
file_filter <- subset(file, select = c("Industria","Derpartmento"))
```

Combinamos los 2 nuevos dataframe en columnas con **`cbind`**

```{r}
new_file <- cbind(file_filter,new_links)
```

![](https://www.r-project.org/Rlogo.png){width="100" height="100"}

El nuevo dataframe resultante de la combinación, lo mostramos en un datatable, con los siguientes parametros:

-   **`filter = "top"`**: mustra un barra de busqueda en la parte superior de cada columna.

-   **`class`**: permite agregar clases css como:

    -   **cell-border:** crear bordes por cada celda.

    -   **hover:** permite resaltar las filas cuando se pasa el cursor sobre ellas.

```{r}
new_file %>% datatable(escape = FALSE , filter = "top", class = 'cell-border hover')
```

</details>
