{
  "hash": "324c023f416ad1f1451d508f466eef23",
  "result": {
    "markdown": "---\ntitle: \"Asignación #2 - Separar cadenas de texto con stringr\"\ndate: \"2023-07-27\"\ncategories:\n  - stringr\n  - csv\n  - DT\n  - rbind\n  - cbind\n  - dataframe\n---\n\n\nEn esta asignación debemos separar el nombre de la edad y la provincia del distrito, utilizando la libreria **`stringr`**\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-63efc69dffa8e62af0c9\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-63efc69dffa8e62af0c9\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Juan / 12\",\"Ana / 20\",\"Pedro / 34\",\"Rosa / 5\",\"Esther / 56\",\"Mario / 17\",\"Javier -45\",\"Carlos - 23\",\"Dilia - 22\",\"Indira - 15\"],[\"Coclé - Penonomé\",\"Coclé - Natá\",\"Coclé - Olá\",\"Coclé - Antón\",\"Coclé - Penonomé\",\"Coclé - Penonomé\",\"Coclé - Natá\",\"Coclé - Olá\",\"Coclé - Antón\",\"Coclé - Penonomé\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Nombre<\\/th>\\n      <th>Dirección<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"searching\":false,\"lengthChange\":false,\"paging\":false,\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n<details>\n\n<summary><b>Respuesta</b></summary>\n\nLlamamos las librerias necesarias.\n\n-   **`DT`** para presentar los dataframe.\n\n-   **`stringr`** para separar los valores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DT)\nlibrary(stringr)\n```\n:::\n\n\nLeemos el archivo csv.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile <- read.csv(file = \"./DatosPeronales - StringR.csv\")\n```\n:::\n\n\nVisualizamos lo que contiene el archivo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile %>% datatable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-7bb3bac9959d7f1f798d\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-7bb3bac9959d7f1f798d\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Juan / 12\",\"Ana / 20\",\"Pedro / 34\",\"Rosa / 5\",\"Esther / 56\",\"Mario / 17\",\"Javier -45\",\"Carlos - 23\",\"Dilia - 22\",\"Indira - 15\"],[\"Coclé - Penonomé\",\"Coclé - Natá\",\"Coclé - Olá\",\"Coclé - Antón\",\"Coclé - Penonomé\",\"Coclé - Penonomé\",\"Coclé - Natá\",\"Coclé - Olá\",\"Coclé - Antón\",\"Coclé - Penonomé\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Nombre<\\/th>\\n      <th>Dirección<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nPodemos observar el archivo tiene 2 columnas, Nombre y Dirección, debemos separar los valores de dichas columnas.\n\nUtilizamos la función **`str_split`** para realizar un corte cuando encuentre dicho patrón que pasamos como segundo paramétro.\n\n-   El primer paramétro de la función son datos a tratar, como el file contiene las 2 columnas, debemos seleccionar la columna a utilizar, para acceder a dicha columna utilizamos (**`$`**).\n\n-   En este caso los nombres y edades están separados por dos divisores, un (**`/`**) y un (**`-`**) por ende pasamos el operador (**`|`**) para que evalue los dos, que si encuentra uno u otro haga el split o corte.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsplit.name <- str_split(file$Nombre,\"/ | -\")\n```\n:::\n\n\nEn el caso de la columna de direción solo tiene un divisor que seria el (**`-`**)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsplit.address <- str_split(file$Dirección,\"-\")\n```\n:::\n\n\nLa función **`str_split`** nos devuelve una lista como resultado, debemos convertir esa lista en un dataframe. En este caso apilamos o creamos filas por cada elemento de la lista llamando a **`rbind`** a traves de **`do.call()`**, luego lo convertimos en un dataframe. Esto lo realizamos en los dos resultados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolumns.name.age <- split.name %>% do.call(rbind,.) %>% data.frame()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolumns.province.district <- split.address %>% do.call(rbind,.) %>% data.frame()\n```\n:::\n\n\nLuego que tenemos los 2 dataframes lo combinamos en uno con **`cbind`**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerge.columns <- cbind(columns.name.age,columns.province.district) %>% data.frame()\n```\n:::\n\n\nCuando tengamos el dataframe resultante debemos parsearle los nombres de las columnas que deseamos.\n\n-   Primero separamos en variables cada columna del dataframe.\n-   Luego dentro un dataframe parseamos las variables con los nombres de las columnas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nname <- merge.columns$X1\nage <- merge.columns$X2\nprovince <- merge.columns$X1.1\ndistrict <- merge.columns$X2.1\n\nresult <- data.frame(Nombre=name, Edad=age, Provincia=province, Distrito=district)\n```\n:::\n\nPor último pasamos el resultado a un datatable para su presentación final.\n\n::: {.cell}\n\n```{.r .cell-code}\nresult %>% datatable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-93a068ad093b8a15fd76\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-93a068ad093b8a15fd76\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Juan \",\"Ana \",\"Pedro \",\"Rosa \",\"Esther \",\"Mario \",\"Javier\",\"Carlos\",\"Dilia\",\"Indira\"],[\"12\",\"20\",\"34\",\"5\",\"56\",\"17\",\"45\",\" 23\",\" 22\",\" 15\"],[\"Coclé \",\"Coclé \",\"Coclé \",\"Coclé \",\"Coclé \",\"Coclé \",\"Coclé \",\"Coclé \",\"Coclé \",\"Coclé \"],[\" Penonomé\",\" Natá\",\" Olá\",\" Antón\",\" Penonomé\",\" Penonomé\",\" Natá\",\" Olá\",\" Antón\",\" Penonomé\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Nombre<\\/th>\\n      <th>Edad<\\/th>\\n      <th>Provincia<\\/th>\\n      <th>Distrito<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n</details>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\r\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/datatables-binding-0.28/datatables.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\r\n<link href=\"../../site_libs/dt-core-1.13.4/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\r\n<link href=\"../../site_libs/dt-core-1.13.4/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/dt-core-1.13.4/js/jquery.dataTables.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}